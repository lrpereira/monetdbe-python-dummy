name: Build binary wheels
# Build wheels for various platforms and Python versions,
# optionally upload them to pypi

on:
  push:

# We're not really using it as an environment variable,
# we just need a place to state this once
env:
  # String encoding of json encoding of list of python versions.
  # The versions must be strings to avoid 3.10 being interpreted
  # as the float 3.1.
  # js
  python-versions-to-build: '[ "3.11", "3.8" ]'

jobs:

  # Run the tests and upload an sdist
  preflight:
    runs-on: ubuntu-latest
    outputs:
      sdist-hash: ${{ steps.hash.outputs.sdist-hash }}
    steps:

      - uses: actions/checkout@v4

      - id: pickcachehash
        # prints 'hash=0FABC...'
        run: |
          python3 scripts/hash-source.py >>$GITHUB_OUTPUT
          cat $GITHUB_OUTPUT

      - uses: actions/cache@v4
        id: cache
        with:
          path: dist
          key: cache-42-${{ steps.pickcachehash.outputs.hash }}

      - id: install
        if: (!steps.cache.outputs.cache-hit)
        uses: ./actions/install-correct-monetdb-version

      - name: Run tests
        if: (!steps.cache.outputs.cache-hit)
        env:
          MONETDBE_INCLUDE_PATH: ${{ steps.install.outputs.includedir }}
          MONETDBE_LIBRARY_PATH: ${{ steps.install.outputs.libdir }}
        run: |
          pip install --upgrade pip
          echo '========'
          pip install -e '.[test]'
          pytest -v

      - name: Build sdist
        if: (!steps.cache.outputs.cache-hit)
        env:
          MONETDBE_INCLUDE_PATH: ${{ steps.install.outputs.includedir }}
          MONETDBE_LIBRARY_PATH: ${{ steps.install.outputs.libdir }}
        run: |
          pip install --upgrade build
          python3 -m build --sdist
          ls dist

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz
          retention-days: 3

      - name: Hash sdist
        id: hash
        run: python3 scripts/hash-sdist.py dist/*.tar.gz


  # Use the manylinux container to ensure it works with old glibc versions.
  # Manylinux comes with all relevant Python versions preinstalled.
  linux:
    needs: preflight
    runs-on: ubuntu-latest
    container:
      image: quay.io/pypa/manylinux_2_28_x86_64
    steps:

      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: sdist
          path: sdist

      - run: ls -lR sdist

      - uses: ./actions/install-correct-monetdb-version
        id: installmonet

      - name: Build wheel
        run: |
          python3.12 scripts/do-everything.py \
            -s sdist/*.tar.gz \
            -d wheels \
            --wheel \
            --manylinux=2.28 \
            --inc-dir="${{ steps.installmonet.outputs.includedir }}" \
            --lib-dir="${{ steps.installmonet.outputs.libdir }}"
